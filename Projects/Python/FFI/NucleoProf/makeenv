# This is a convenience file for getting quick shortcuts
# to different project actions

# Change these to match your ghc compiler
GHC_LIBS_PREFIX=/usr/lib/ghc
GHC_VERSION=7.6.1
GHC_RUNTIME=""


# With this line, we get the directory where the containing
# `makeenv' file is.
_current_dir=$(dirname `readlink -f ${BASH_SOURCE[0]}`)

# It is a good idea to export the current project directory,
# so that other tools can also use it. In this case I'm using 
# `NUCLEOPROF_' as a prefix for exported, project-specific 
# variables. That should reduce clutter a little bit.
export NUCLEOPROF_DIRECTORY=$_current_dir

# But a short alias for the above variable is more convenient in 
# the rest of this bash-script file.
H=$_current_dir

if [ "$GHC_RUNTIME" = "" ] ; then
    GHC_RUNTIME_FSUFFIX=HSrts-ghc${GHC_VERSION}
else
    GHC_RUNTIME_FSUFFIX=HSrts_${GHC_RUNTIME}-ghc${GHC_VERSION}
fi
GHC_RUNTIME_FILE=lib${GHC_RUNTIME_FSUFFIX}.so

if [ -e $GHC_LIBS_PREFIX/$GHC_RUNTIME_FILE ] ; then 
    echo "All good, runtime found"
else
    echo "WARNING: The runtime has not been found. Check that you "\
         "have installed ghc, and that the directories in this file "\
         "are set correctly."
fi

# This function defines a short alias, `mk', for quickly building
# the program
function mk(){
    if [ "$H/module.c" -nt "$H/build/module.o" ] ; then
        echo "Compiling module.c"
        ghc -fPIC -c $H/module.c -o $H/build/module.o #|| exit
    fi
    ghc \
            -shared -dynamic -fPIC -no-hs-main \
            -optl-Wl,-rpath,$GHC_LIBS_PREFIX -l$GHC_RUNTIME_FSUFFIX \
            --make NucleoProf.Basic \
            \
            $H/build/module.o \
            -i$H/hs -odir $H/build -hidir $H/built_hi \
            \
            -o $H/NucleoProf.so
}

