Version of session file format:
               1
Time of storage:
               "Mon Apr  8 19:29:59 CEST 2013"
Layout:        HorizontalP (TerminalP {paneGroups = fromList [("Browser",TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 1, detachedId = Nothing, detachedSize = Nothing}),("Debug",HorizontalP (TerminalP {paneGroups = fromList [], paneTabs = Nothing, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) (TerminalP {paneGroups = fromList [], paneTabs = Just TopP, currentPage = 2, detachedId = Nothing, detachedSize = Nothing}) 419)], paneTabs = Just LeftP, currentPage = 0, detachedId = Nothing, detachedSize = Nothing}) (TerminalP {paneGroups = fromList [], paneTabs = Just TopP, currentPage = -1, detachedId = Nothing, detachedSize = Nothing}) 431
Population:    [(Just (BreakpointsSt BreakpointsState),[SplitP TopP,GroupP "Debug",SplitP BottomP]),(Just (BufferSt (BufferState "/home/madjestic/Projects/Haskell/Entropy/src/Circles.hs" 2101)),[SplitP TopP]),(Just (ErrorsSt ErrorsState),[SplitP TopP]),(Just (FilesSt FilesState),[SplitP TopP]),(Just (GrepSt GrepState),[SplitP TopP]),(Just (InfoSt (InfoState (Just (Reexported (ReexportedDescr {dsrMbModu = Just (PM {pack = PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [2,1,2], versionTags = []}}, modu = ModuleName ["Control","Monad","State"]}), dsrDescr = Real (RealDescr {dscName' = "MonadState", dscMbTypeStr' = Just "class Monad m => MonadState s (m::* -> *) | m -> s\n        get  :: m s\n    put  :: s -> m ()\n    state  :: forall a. (s -> (a, s)) -> m a\n", dscMbModu' = Just (PM {pack = PackageIdentifier {pkgName = PackageName "mtl", pkgVersion = Version {versionBranch = [2,1,2], versionTags = []}}, modu = ModuleName ["Control","Monad","State","Class"]}), dscMbLocation' = Nothing, dscMbComment' = Nothing, dscTypeHint' = ClassDescr [] [SimpleDescr {sdName = "get", sdType = Just "m s", sdLocation = Nothing, sdComment = Nothing, sdExported = True},SimpleDescr {sdName = "put", sdType = Just "s -> m ()", sdLocation = Nothing, sdComment = Nothing, sdExported = True},SimpleDescr {sdName = "state", sdType = Just "forall a. (s -> (a, s)) -> m a", sdLocation = Nothing, sdComment = Nothing, sdExported = True}], dscExported' = True})}))))),[SplitP TopP,GroupP "Browser"]),(Just (LogSt LogState),[SplitP TopP]),(Just (BufferSt (BufferState "/home/madjestic/Projects/Haskell/Excercises/Random/src/Main.hs" 781)),[SplitP TopP]),(Just (BufferSt (BufferState "/home/madjestic/Projects/Haskell/Excercises/Random/src/Main4.hs" 0)),[SplitP TopP]),(Just (ModulesSt (ModulesState 223 (SystemScope,False) (Just (ModuleName ["Control","Monad","State"]),Just "MonadState") (ExpanderState {packageExp = ([],[]), packageExpNoBlack = ([],[]), packageDExp = ([],[]), packageDExpNoBlack = ([[5]],[]), workspaceExp = ([],[]), workspaceExpNoBlack = ([],[]), workspaceDExp = ([],[]), workspaceDExpNoBlack = ([],[]), systemExp = ([],[]), systemExpNoBlack = ([[105],[86,11,9],[86,11],[86,10],[86]],[[0]])}))),[SplitP TopP,GroupP "Browser"]),(Just (SearchSt (SearchState {searchString = "test", searchScope = PackageScope False, searchMode = Regex {caseSense = False}})),[SplitP TopP]),(Just (TraceSt TraceState),[SplitP TopP,GroupP "Debug",SplitP BottomP]),(Just (VariablesSt VariablesState),[SplitP TopP,GroupP "Debug",SplitP BottomP]),(Just (WorkspaceSt WorkspaceState),[SplitP TopP]),(Just (BufferSt (BufferStateTrans "_Eval.hs" "\n" 0)),[SplitP TopP,GroupP "Debug",SplitP TopP])]
Window size:   (1022,481)
Completion size:
               (750,401)
Workspace:     Just "/home/madjestic/Projects/Haskell/Entropy/Entropy.lkshw"
Active pane:   Just "Modules"
Toolbar visible:
               False
FindbarState:  (False,FindState {entryStr = "asd", entryHist = ["asd","p_nodes_angles","*circle*","*gloss","*A","Z","gloss","Circle","Blaze","b","z","1"], replaceStr = "", replaceHist = [], caseSensitive = False, entireWord = False, wrapAround = False, regex = False, lineNr = 1})
Recently opened files:
               ["/home/madjestic/Projects/Haskell/Excercises/Random/src/Main3.hs","/home/madjestic/Projects/Haskell/Excercises/Random/src/Main1.hs","/home/madjestic/Projects/Haskell/Excercises/Random/src/Main2.hs","/home/madjestic/.leksah-0.13/packageSources/haskell2010-1.1.1.0/Control/Monad.hs","/home/madjestic/Projects/Haskell/Excercises/Random/src/Main.hs","/home/madjestic/Projects/Haskell/Entropy/src/Query.hs","/home/madjestic/Projects/Haskell/Scheme_in_48_hours/src/Main.hs","/home/madjestic/Projects/Haskell/gloss-examples-1.7.7.2/picture/Clock/Main.hs","/home/madjestic/Projects/Haskell/Entropy/prototypes/src/Main.hs","/home/madjestic/Projects/Haskell/Entropy/src/Main.hs","/home/madjestic/Projects/Haskell/Entropy/prototypes/circles.hs","/home/madjestic/.leksah-0.13/leksah-welcome/src/Main.hs"]
Recently opened workspaces:
               ["/home/madjestic/Projects/Haskell/Scheme48h/scheme48h.lkshw","/home/madjestic/Projects/Haskell/Test/Test.lkshw","/home/madjestic/Projects/Haskell/Entropy/Entropy.lkshw","/home/madjestic/leksah.lkshw"]